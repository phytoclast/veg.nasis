setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
f1 <- read.delim('data/plants/FinalForms.txt')
f2 <- read.delim('data/plants/List_Species2011.txt')
f3 <- read.delim('data/plants/BinomialGrowthHabits.txt')
bm.geo <- read.csv('data/plants/bm.geo.csv')
syns <- read.csv('data/plants/m.ac.csv')
gho <- read.delim('data/plants/GrowthHabitOptions.txt')
gho <-  gho %>%
mutate(First = substr(Revised.Symbol, 1,1), Second = substr(Revised.Symbol, 2,2), Last = substr(Revised.Symbol, 3,5))
fsyn <- f1 |> left_join(syns[,c('acc','syn')], by= c('Scientific.Name'='syn')) |> mutate(Scientific.Name = ifelse(is.na(acc),Scientific.Name, acc))
f1 <-  fsyn %>% left_join(gho[,c("Revised.Symbol","First","Second","Last")], by=c("FinalHabits"="Revised.Symbol"))
ferns <- subset(f1, Subdivision %in% c('Lycopodiophytina','Polypodiophytina'), select = 'Genus') |> unique()
f1$First <- as.factor(f1$First)
f1$Second <- as.factor(f1$Second)
#f1$Third <- as.factor(f1$Third)
f1$Last <- as.factor(f1$Last)
f1$Genus <- as.factor(f1$Genus)
f1$Family <- as.factor(f1$Family)
f1$Order <- as.factor(f1$Order)
f1$Superorder <- as.factor(f1$Superorder)
f1$Subclass <- as.factor(f1$Class)
f1$Class <- as.factor(f1$Class)
f1$Superclass <- as.factor(f1$Superclass)
f1$Subdivision <- as.factor(f1$Subdivision)
gho <- gho |> mutate(ht.max = case_when(
First %in%  "T" & Second %in% c('2','') ~ 24,
First %in%  "T" & Second %in% c('1') ~ 12,
First %in%  c("L","E")  ~ 12,
First %in%  "S" & Second %in% c('2','') ~ 3,
First %in%  "S" & Second %in% c('1') ~ 0.3,
First %in%  "H" ~ 0.6,
First %in%  "N" ~ 0,
TRUE ~ 0))
FC.1 <- c("US.HI")
FC.2 <- c("MX.AG","MX.BN", "MX.BS", "MX.CA","MX.CH","MX.DF", "MX.DU", "MX.GJ","MX.NL","MX.SO", "MX.TL","MX.ZA","US.AZ","US.NM")
FC.3 <- c("MX.CL", "MX.CP","MX.GR","MX.HI","MX.JA", "MX.MC","MX.MR","MX.MX", "MX.NA","MX.OA","MX.PU", "MX.QE", "MX.SI","MX.SL", "MX.TM", "MX.VE")
FC.4 <- c("MX.CM", "MX.QR", "MX.TB", "MX.YU", "US.PR","US.UM","US.VI")
FC.5 <- c("CA.AB","CA.BC","CA.MB","CA.SK","US.CA", "US.CO","US.ID","US.MT","US.ND","US.NE","US.OR","US.NV","US.SD", "US.UT","US.WA","US.WY")
FC.6 <- c("CA.LB","CA.NB", "CA.NF", "CA.PE","CA.QU","CA.NS","CA.NT","CA.NU","CA.YT","GL","PM", "US.AK")
FC.7 <- c("US.AL", "US.AR", "US.FL", "US.GA","US.KS", "US.LA", "US.MS", "US.OK","US.TX","US.SC")
FC.8 <- c("CA.ON", "US.CT", "US.DE", "US.DC","US.IA", "US.IL", "US.IN", "US.KY","US.MA", "US.MD", "US.ME", "US.MI", "US.MN", "US.MO","US.NC","US.NH", "US.NJ",   "US.NY", "US.OH",   "US.PA", "US.RI", "US.TN", "US.WI", "US.VT","US.VA", "US.WV")
#native ranges ----
FC <- cbind(FC= "FC.1", STATECODE = FC.1 ) %>%
rbind(cbind(FC= "FC.2", FC.2 ))%>%
rbind(cbind(FC= "FC.3", FC.3 ))%>%
rbind(cbind(FC= "FC.4", FC.4 ))%>%
rbind(cbind(FC= "FC.5", FC.5 ))%>%
rbind(cbind(FC= "FC.6", FC.6 ))%>%
rbind(cbind(FC= "FC.7", FC.7 ))%>%
rbind(cbind(FC= "FC.8", FC.8 ))%>% as.data.frame()
bm.geo.FC <- bm.geo %>% left_join(FC) %>% subset(Status %in% "N")
bm.geo.sums <- bm.geo.FC %>% group_by(ac.binomial, FC) %>% summarise(ct = length(FC))
bm.geo.max <- bm.geo.sums %>% group_by(ac.binomial) %>% summarise(ctsum = sum(ct))
bm.geo.sums <- bm.geo.sums %>% left_join(bm.geo.max) %>% mutate(pct = ct/ctsum*100)
bm.geo.col <-  as.data.frame(cbind(ac.binomial=unique(bm.geo.sums$ac.binomial))) %>%
left_join(subset(bm.geo.sums %>% mutate(FC.1=pct), FC %in% 'FC.1', select=c(ac.binomial, FC.1)))  %>%
left_join(subset(bm.geo.sums %>% mutate(FC.2=pct), FC %in% 'FC.2', select=c(ac.binomial, FC.2)))  %>%
left_join(subset(bm.geo.sums %>% mutate(FC.3=pct), FC %in% 'FC.3', select=c(ac.binomial, FC.3)))  %>%
left_join(subset(bm.geo.sums %>% mutate(FC.4=pct), FC %in% 'FC.4', select=c(ac.binomial, FC.4)))  %>%
left_join(subset(bm.geo.sums %>% mutate(FC.5=pct), FC %in% 'FC.5', select=c(ac.binomial, FC.5)))  %>%
left_join(subset(bm.geo.sums %>% mutate(FC.6=pct), FC %in% 'FC.6', select=c(ac.binomial, FC.6)))  %>%
left_join(subset(bm.geo.sums %>% mutate(FC.7=pct), FC %in% 'FC.7', select=c(ac.binomial, FC.7)))  %>%
left_join(subset(bm.geo.sums %>% mutate(FC.8=pct), FC %in% 'FC.8', select=c(ac.binomial, FC.8)))
f1.geo <- f1 %>% left_join(bm.geo.col, by=c('Binomial' = 'ac.binomial')) %>%
mutate(FC.1 = ifelse(is.na(FC.1),0,FC.1),
FC.2 = ifelse(is.na(FC.2),0,FC.2),
FC.3 = ifelse(is.na(FC.3),0,FC.3),
FC.4 = ifelse(is.na(FC.4),0,FC.4),
FC.5 = ifelse(is.na(FC.5),0,FC.5),
FC.6 = ifelse(is.na(FC.6),0,FC.6),
FC.7 = ifelse(is.na(FC.7),0,FC.7),
FC.8 = ifelse(is.na(FC.8),0,FC.8))
#exotic ranges ----
FC <- cbind(FC= "FC.1", STATECODE = FC.1 ) %>%
rbind(cbind(FC= "xFC.2", FC.2 ))%>%
rbind(cbind(FC= "xFC.3", FC.3 ))%>%
rbind(cbind(FC= "xFC.4", FC.4 ))%>%
rbind(cbind(FC= "xFC.5", FC.5 ))%>%
rbind(cbind(FC= "xFC.6", FC.6 ))%>%
rbind(cbind(FC= "xFC.7", FC.7 ))%>%
rbind(cbind(FC= "xFC.8", FC.8 ))%>% as.data.frame()
bm.geo.FC <- bm.geo %>% left_join(FC)
bm.geo.sums <- bm.geo.FC %>% group_by(ac.binomial, FC) %>% summarise(ct = length(FC))
bm.geo.max <- bm.geo.sums %>% group_by(ac.binomial) %>% summarise(ctsum = sum(ct))
bm.geo.sums <- bm.geo.sums %>% left_join(bm.geo.max) %>% mutate(pct = ct/ctsum*100)
bm.geo.col <-  as.data.frame(cbind(ac.binomial=unique(bm.geo.sums$ac.binomial))) %>%
left_join(subset(bm.geo.sums %>% mutate(xFC.1=pct), FC %in% 'xFC.1', select=c(ac.binomial, xFC.1)))  %>%
left_join(subset(bm.geo.sums %>% mutate(xFC.2=pct), FC %in% 'xFC.2', select=c(ac.binomial, xFC.2)))  %>%
left_join(subset(bm.geo.sums %>% mutate(xFC.3=pct), FC %in% 'xFC.3', select=c(ac.binomial, xFC.3)))  %>%
left_join(subset(bm.geo.sums %>% mutate(xFC.4=pct), FC %in% 'xFC.4', select=c(ac.binomial, xFC.4)))  %>%
left_join(subset(bm.geo.sums %>% mutate(xFC.5=pct), FC %in% 'xFC.5', select=c(ac.binomial, xFC.5)))  %>%
left_join(subset(bm.geo.sums %>% mutate(xFC.6=pct), FC %in% 'xFC.6', select=c(ac.binomial, xFC.6)))  %>%
left_join(subset(bm.geo.sums %>% mutate(xFC.7=pct), FC %in% 'xFC.7', select=c(ac.binomial, xFC.7)))  %>%
left_join(subset(bm.geo.sums %>% mutate(xFC.8=pct), FC %in% 'xFC.8', select=c(ac.binomial, xFC.8)))
f1.geo <- f1.geo %>% left_join(bm.geo.col, by=c('Binomial' = 'ac.binomial')) %>%
mutate(xFC.1 = ifelse(is.na(xFC.1),0,xFC.1),
xFC.2 = ifelse(is.na(xFC.2),0,xFC.2),
xFC.3 = ifelse(is.na(xFC.3),0,xFC.3),
xFC.4 = ifelse(is.na(xFC.4),0,xFC.4),
xFC.5 = ifelse(is.na(xFC.5),0,xFC.5),
xFC.6 = ifelse(is.na(xFC.6),0,xFC.6),
xFC.7 = ifelse(is.na(xFC.7),0,xFC.7),
xFC.8 = ifelse(is.na(xFC.8),0,xFC.8))
rf <-  ranger(First ~ Genus+Family+Order+Superorder+Subclass+Class+Superclass+Subdivision+
FC.1+FC.2+FC.3+FC.4+FC.5+FC.6+FC.7+FC.8+
xFC.1+xFC.2+xFC.3+xFC.4+xFC.5+xFC.6+xFC.7+xFC.8, always.split.variables = 'Genus', data= subset(f1.geo, !First %in% c("",".")))
f1.geo$mod1 <-  predictions(predict(rf, f1.geo))
f1.geo <- f1.geo %>% mutate(mod1 = ifelse(First %in% "", as.character(mod1), as.character(First)) %>% as.factor())
rf <-  ranger(Second ~ mod1+Genus+Family+Order+Superorder+Subclass+Class+Superclass+Subdivision+
FC.1+FC.2+FC.3+FC.4+FC.5+FC.6+FC.7+FC.8+
xFC.1+xFC.2+xFC.3+xFC.4+xFC.5+xFC.6+xFC.7+xFC.8, always.split.variables = c('Genus','mod1'), data= subset(f1.geo, !Second %in% c("",".")))
f1.geo$mod2 <-  predictions(predict(rf, f1.geo))
rf <-  ranger(Last ~ mod1+Genus+Family+Order+Superorder+Subclass+Class+Superclass+Subdivision+
FC.1+FC.2+FC.3+FC.4+FC.5+FC.6+FC.7+FC.8+
xFC.1+xFC.2+xFC.3+xFC.4+xFC.5+xFC.6+xFC.7+xFC.8, always.split.variables = c('Genus','mod1'), data= subset(f1.geo, !Last %in% c("","B")))
f1.geo$mod3 <-  predictions(predict(rf, f1.geo))
f1.geo <- f1.geo %>% mutate(mod2 = ifelse(mod1 %in% c('E','L','N'), ".",as.character(mod2)), GH = paste0(mod1, mod2, mod3))
taxon.habits <- subset(f1.geo, select = c(Scientific.Name, FinalHabits,Last, mod1,mod2,mod3,GH))
colnames(taxon.habits) <- c('Scientific.Name', 'preGH', 'Last','Stem','Size','Leaf', 'GH')
ghtest <- subset(taxon.habits, Last != Leaf & !Last %in% "")
write.csv(ghtest, 'data/plants/ghtest.csv', row.names = F)
ghtest2 <- read.csv('data/plants/ghtest2.csv') %>% filter(Leafnew != Leaf)
taxon.habits <- taxon.habits |> mutate(genus = str_split_fixed(Scientific.Name , '[[:blank:]]',3)[,1])
taxon.habits <- taxon.habits |> mutate(Stem = ifelse(genus %in% c('Cuscuta', 'Dendrophthora'), "E", as.character(Stem)),
Size = ifelse(genus %in% c('Cuscuta', 'Dendrophthora'), ".", as.character(Size)),
Leaf = ifelse(genus %in% c('Cuscuta', 'Dendrophthora'), "i", as.character(Leaf)),
Stem = ifelse(genus %in% c('Tillandsia', 'Epidendrum'), "E", as.character(Stem)),
Size = ifelse(genus %in% c('Tillandsia', 'Epidendrum'), ".", as.character(Size)),
Leaf = ifelse(genus %in% c('Tillandsia', 'Epidendrum'), "F", as.character(Leaf)),
Leaf = ifelse(genus %in% c('Andropogon'), "GW", as.character(Leaf)),
Leaf = ifelse(genus %in% ferns$Genus & Stem %in% 'H' & Leaf %in% 'F', "FE", as.character(Leaf)),
Size = ifelse(Leaf %in% 'FE' & Stem %in% 'H', '.', as.character(Size)),
Leaf = ifelse(Scientific.Name %in% ghtest2$Scientific.Name, as.character(Last), as.character(Leaf)),
GH = paste0(Stem, Size, Leaf))
taxon.habits <- subset(taxon.habits, select = c(-Last)) |> unique()
#bring in max heights ----
ht.round <- function(ht){
ifelse(ht >= 8,round(ht,0),
ifelse(ht >= 3, floor(ht*2+0.499)/2,round(ht,1)
))}
plant.hts <- read.delim('data/plants/Plant_heights.txt')
dbplanthts <- read.delim('data/plants/databaseherbhts.txt')
colnames(dbplanthts) <- colnames(plant.hts)
dbplanthts$Ht_m <- ht.round(dbplanthts$Ht_m)
dbplanthts <- subset(dbplanthts, !Scientific.Name %in% plant.hts$Scientific.Name & grepl(' ',Scientific.Name))
plant.hts <-rbind(plant.hts, dbplanthts)
x <- taxon.habits  |> mutate(ht.max = NA_real_)
x <- x |> left_join(plant.hts[,c('Scientific.Name','Ht_m')], by = c('Scientific.Name'='Scientific.Name'), multiple = 'first')
x <- x |> mutate(ht.max = Ht_m)
x <- x[,1:8]
x <- x |> left_join(syns[,c('acc','syn')], by=c('Scientific.Name'='syn'), multiple = 'first') |> left_join(plant.hts[,c('Scientific.Name','Ht_m')], by = c('acc'='Scientific.Name'), multiple = 'first')
x <- x |> mutate(ht.max = ifelse(is.na(ht.max), Ht_m, ht.max))
x <- x[,1:8]
x <- x  |> mutate(ht.max = case_when(
# is.na(ht.max) & Stem %in%  "T" & Size %in% c('2','') ~ 24,
# is.na(ht.max) & Stem %in%  "T" & Size %in% c('1') ~ 12,
# is.na(ht.max) & Stem %in%  c("L","E")  ~ 12,
# is.na(ht.max) & Stem %in%  "S" & Size %in% c('2','') ~ 3,
# is.na(ht.max) & Stem %in%  "S" & Size %in% c('1') ~ 0.3,
# is.na(ht.max) & Stem %in%  "H" & Leaf %in% "FV" ~ 3,
# is.na(ht.max) & Stem %in%  "H" & Leaf %in% "A" ~ 0,
# is.na(ht.max) & Stem %in%  "H" ~ 0.6,
# is.na(ht.max) & Stem %in%  "N" ~ 0,
ht.max <= 15 & Stem %in%  "T" & Size %in% c('2','') ~ 20,
ht.max <= 5 & Stem %in%  "T" & Size %in% c('1') ~ 6,
ht.max <= 0.5 & Stem %in%  "S" & Size %in% c('2','') ~ 1,
ht.max > 15 & Stem %in%  "T" & Size %in% c('1') ~ 15,
ht.max > 5 & Stem %in%  "S" & Size %in% c('2','') ~ 5,
ht.max > 0.5 & Stem %in%  "S" & Size %in% c('1') ~ 0.5,
TRUE ~ ht.max))
f1.geo2 <- f1.geo[,c(1:31)] |> left_join(x) |> mutate(StemSize=paste0(Stem,Size))
rf <-  ranger(ht.max ~ StemSize+Stem+GH+Genus+Family+Order+Superorder+Subclass+Class+Superclass+Subdivision+
FC.1+FC.2+FC.3+FC.4+FC.5+FC.6+FC.7+FC.8+
xFC.1+xFC.2+xFC.3+xFC.4+xFC.5+xFC.6+xFC.7+xFC.8
, always.split.variables = c('Genus','Family','StemSize','GH','Stem'),
min.node.size = 1, data= subset(f1.geo2, !is.na(ht.max)), num.trees = 500, sample.fraction = 1,
alpha = 0.5,)
f1.geo2$ht.max.pred <-  predictions(predict(rf, f1.geo2))
dogA=1
dogB=3
dogC=2
dogD=2
catA=1
catB=4
catC=8
catD=6
birdA=1
birdB=3
birdC=2
birdD=2
dogs=c(dogA,dogB,dogC,dogD)
dogs=list(dogA,dogB,dogC,dogD)
dogA=1
dogB=3
dogC=2
dogD=2
catA=1
catB=4
catC=8
catD=6
birdA=2
birdB=4
birdC=5
birdD=6
dogs=list(dogA,dogB,dogC,dogD)
cats=list(catA,catB,catC,catD)
birds=list(birdA,birdB,birdC,birdD)
sample(1:4,50,replace = T)
dog.ind = sample(1:4,50,replace = T)
cat.ind = sample(1:4,50,replace = T)
bird.ind = sample(1:4,50,replace = T)
dogs{dog.ind}
dogs[dog.ind]
dogs[[dog.ind]]
dogs=list(dogA=dogA,dogB=dogB,dogC=dogC,dogD=dogD)
dog.ind = sample(1:4,50,replace = T)
cat.ind = sample(1:4,50,replace = T)
bird.ind = sample(1:4,50,replace = T)
dogs[dog.ind]
df <- cbind(names(dogs[dog.ind]),names(cats[cat.ind]),names(birds[bird.ind]))
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]))
View(df)
cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]))
dogA=1
dogB=3
dogC=2
dogD=2
catA=1
catB=4
catC=8
catD=6
birdA=2
birdB=4
birdC=5
birdD=6
dogs=list(dogA=dogA,dogB=dogB,dogC=dogC,dogD=dogD)
cats=list(catA=catA,catB=catB,catC=catC,catD=catD)
birds=list(birdA=birdA,birdB=birdB,birdC=birdC,birdD=birdD)
dog.ind = sample(1:4,50,replace = T)
cat.ind = sample(1:4,50,replace = T)
bird.ind = sample(1:4,50,replace = T)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]))
View(df)
df <- df |> mutate(res = dogs[dog.ind]+cats[cat.ind]+birds[bird.ind])
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = dogs[dog.ind]+cats[cat.ind]+birds[bird.ind])
cats[cat.ind]
unname(cats[cat.ind])
res = dogs[dog.ind]+(cats[cat.ind])+birds[bird.ind]
as.numeric(cats[cat.ind])
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind]))
rf <- ranger(res ~ dogs+cats+birds, data = df)
df <- cbind(dogs=as.vector(names(dogs[dog.ind])),
cats=as.vector(names(cats[cat.ind])),
birds=as.vector(names(birds[bird.ind])),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind]))
df <- cbind(dogs=as.vector(names(dogs[dog.ind])),
cats=as.vector(names(cats[cat.ind])),
birds=as.vector(names(birds[bird.ind])),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
rf <- ranger(res ~ dogs+cats+birds, data = df)
df[,1:3] <- as.vector(df[,1:3])
as.vector(df[,1:3])
df[,1:3] <- as.vector(df[,1:3])
View(df)
df[,1:3] <- lapply(df[,1:3], as.vector())
lapply(df[,1:3], as.vector())
df <- df |> mutate(dogs=as.vector(dogs))
df <- df |> mutate(dogs1=as.vector(dogs))
View(df)
df$dogs <- as.vector(df$dogs)
View(df)
df$dogs <- as.factor(df$dogs)
df <- cbind(dogs=names(dogs[dog.ind]),cats=as.factor(names(cats[cat.ind])),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> nutate(dogs=as.factor(dogs))
df <- df |> mutate(dogs=as.factor(dogs))
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds))
rf <- ranger(res ~ dogs+cats+birds, data = df)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df)
df$pred <-  predictions(predict(rf, df))
View(df)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df)
df$pred <-  predictions(predict(rf, df))
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 0.01)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 0.1)
df$pred <-  predictions(predict(rf, df))
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1)
df$pred <-  predictions(predict(rf, df))
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = subset(df, !birds %in% 'birdD'), sample.fraction = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
dogA=1
dogB=2
dogC=3
dogD=4
catA=1
catB=2
catC=3
catD=4
birdA=1
birdB=2
birdC=3
birdD=4
dogs=list(dogA=dogA,dogB=dogB,dogC=dogC,dogD=dogD)
cats=list(catA=catA,catB=catB,catC=catC,catD=catD)
birds=list(birdA=birdA,birdB=birdB,birdC=birdC,birdD=birdD)
dog.ind = sample(1:4,50,replace = T)
cat.ind = sample(1:4,50,replace = T)
bird.ind = sample(1:4,50,replace = T)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = subset(df, !birds %in% 'birdD'), sample.fraction = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
View(df)
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1, mtry = 3)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1, mtry = 3, min.node.size = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
dogA=1
dogB=2
dogC=3
dogD=4
catA=1
catB=3
catC=2
catD=4
birdA=4
birdB=2
birdC=3
birdD=1
dogs=list(dogA=dogA,dogB=dogB,dogC=dogC,dogD=dogD)
cats=list(catA=catA,catB=catB,catC=catC,catD=catD)
birds=list(birdA=birdA,birdB=birdB,birdC=birdC,birdD=birdD)
dog.ind = sample(1:4,50,replace = T)
cat.ind = sample(1:4,50,replace = T)
bird.ind = sample(1:4,50,replace = T)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1, mtry = 3, min.node.size = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
dog.ind = sample(1:4,100,replace = T)
cat.ind = sample(1:4,100,replace = T)
bird.ind = sample(1:4,100,replace = T)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1, mtry = 3, min.node.size = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
dog.ind = sample(1:4,200,replace = T)
cat.ind = sample(1:4,200,replace = T)
bird.ind = sample(1:4,200,replace = T)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1, mtry = 3, min.node.size = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = subset(df, !birds %in% 'birdD'), sample.fraction = 1, mtry = 3, min.node.size = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])*as.numeric(cats[cat.ind])*as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1, mtry = 3, min.node.size = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
library(stringr)
library(dplyr)
library(ranger)
dogA=1
dogB=2
dogC=3
dogD=4
catA=1
catB=3
catC=2
catD=4
birdA=4
birdB=2
birdC=3
birdD=1
dogs=list(dogA=dogA,dogB=dogB,dogC=dogC,dogD=dogD)
cats=list(catA=catA,catB=catB,catC=catC,catD=catD)
birds=list(birdA=birdA,birdB=birdB,birdC=birdC,birdD=birdD)
dog.ind = sample(1:4,200,replace = T)
cat.ind = sample(1:4,200,replace = T)
bird.ind = sample(1:4,200,replace = T)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])*as.numeric(cats[cat.ind])*as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1, mtry = 3, min.node.size = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
rf <- ranger(res ~ dogs+cats+birds, data = subset(df, !birds %in% 'birdD'), sample.fraction = 1, mtry = 3, min.node.size = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
rf <-  ranger(ht.max ~ StemSize+Stem+GH+Genus+Family+Order+Superorder+Subclass+Class+Superclass+Subdivision+
FC.1+FC.2+FC.3+FC.4+FC.5+FC.6+FC.7+FC.8+
xFC.1+xFC.2+xFC.3+xFC.4+xFC.5+xFC.6+xFC.7+xFC.8
, always.split.variables = c('Genus','Family','StemSize','GH','Stem'),
min.node.size = 1, data= subset(f1.geo2, !is.na(ht.max)), num.trees = 500, sample.fraction = 1,
mtry = 11,)
f1.geo2$ht.max.pred <-  predictions(predict(rf, f1.geo2))
View(ghtest2)
View(f1.geo2)
mod <- lm(res ~ dogs+cats+birds, data = df)
df$pred <-  predictions(predict(mod, df))
predict(mod, df)
df$pred <-  predict(mod, df)
mean((df$res-df$pred)^2)
mod <- lm(res ~ dogs+cats+birds, data = df)
df$pred <-  predict(mod, df)
mean((df$res-df$pred)^2)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
mod <- lm(res ~ dogs+cats+birds, data = df)
df$pred <-  predict(mod, df)
mean((df$res-df$pred)^2)
mod <- lm(res ~ dogs+cats+birds, data = subset(df, !birds %in% 'birdD'))
df$pred <-  predict(mod, df)
df$pred <-  predict(mod, df, na.action = na.omit)
df <- cbind(dogs=names(dogs[dog.ind]),cats=names(cats[cat.ind]),birds=names(birds[bird.ind]),
res = as.numeric(dogs[dog.ind])+as.numeric(cats[cat.ind])+as.numeric(birds[bird.ind])) |> as.data.frame()
df <- df |> mutate(dogs=as.factor(dogs),cats=as.factor(cats),birds=as.factor(birds), res=as.numeric(res))
df <- df |> mutate(res1 = ifelse(!birds %in% 'birdD', res, NA_real_))
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1, mtry = 3, min.node.size = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
rf <- ranger(res1 ~ dogs+cats+birds, data = subset(df), sample.fraction = 1, mtry = 3, min.node.size = 1)
rf <- ranger(res1 ~ dogs+cats+birds, data = subset(df), sample.fraction = 1, min.node.size = 1)
mod <- lm(res1 ~ dogs+cats+birds, data = df)
df$pred <-  predict(mod, df)
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1, mtry = 3, min.node.size = 1, respect.unordered.factors=F)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
rf <- ranger(res ~ dogs+cats+birds, data = df, sample.fraction = 1, mtry = 3, min.node.size = 1, respect.unordered.factors=T)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
rf <- ranger(res1 ~ dogs+cats+birds, data = subset(df), sample.fraction = 1, min.node.size = 1)
rf <- ranger(res1 ~ dogs+cats+birds, data = subset(df, !is.na(res1)), sample.fraction = 1, min.node.size = 1)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
rf <- ranger(res1 ~ dogs+cats+birds, data = subset(df, !is.na(res1)), sample.fraction = 1, min.node.size = 1, respect.unordered.factors=T)
df$pred <-  predictions(predict(rf, df))
mean((df$res-df$pred)^2)
rf <-  ranger(ht.max ~ StemSize+Stem+GH+Genus+Family+Order+Superorder+Subclass+Class+Superclass+Subdivision+
FC.1+FC.2+FC.3+FC.4+FC.5+FC.6+FC.7+FC.8+
xFC.1+xFC.2+xFC.3+xFC.4+xFC.5+xFC.6+xFC.7+xFC.8
, always.split.variables = c('Genus','Family','StemSize','GH','Stem'),
min.node.size = 1, data= subset(f1.geo2, !is.na(ht.max)), num.trees = 500, sample.fraction = 1,
respect.unordered.factors = T)
f1.geo2$ht.max.pred <-  predictions(predict(rf, f1.geo2))
View(f1.geo2)
rf <-  ranger(ht.max ~ StemSize+Stem+GH+Genus+Family+Order+Superorder+Subclass+Class+Superclass+Subdivision+
FC.1+FC.2+FC.3+FC.4+FC.5+FC.6+FC.7+FC.8+
xFC.1+xFC.2+xFC.3+xFC.4+xFC.5+xFC.6+xFC.7+xFC.8
, always.split.variables = c('Genus','Family','StemSize','GH','Stem'),
data= subset(f1.geo2, !is.na(ht.max)), num.trees = 500, sample.fraction = 0.5,
respect.unordered.factors = T)
f1.geo2$ht.max.pred <-  predictions(predict(rf, f1.geo2))
View(f1.geo2)
